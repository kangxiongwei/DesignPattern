享元模式（结构型）:

通过一个享元工厂来存放共享对象，其中维护一个Map，如Map中有需要的key，直接返回，
否则创建对象，并存入map，然后返回

角色：

1)抽象享元角色：为具体享元角色规定了必须实现的方法，而外蕴状态就是以参数的形式通过此方法传入。在Java中可以由抽象类、接口来担当。
2)具体享元角色：实现抽象角色规定的方法。如果存在内蕴状态，就负责为内蕴状态提供存储空间。
3)享元工厂角色：负责创建和管理享元角色。要想达到共享的目的，这个角色的实现是关键！
4)客户端角色：维护对所有享元对象的引用，而且还需要存储对应的外蕴状态。